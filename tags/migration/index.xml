<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Migration on YAL/TB</title><link>/tags/migration/</link><description>Recent content in Migration on YAL/TB</description><generator>Hugo</generator><language>en</language><managingEditor>adathor@adathor.com (Attila Pinter - Adathor)</managingEditor><webMaster>adathor@adathor.com (Attila Pinter - Adathor)</webMaster><lastBuildDate>Sat, 20 Feb 2021 04:55:04 +0700</lastBuildDate><atom:link href="/tags/migration/index.xml" rel="self" type="application/rss+xml"/><item><title>Podman checkpoint/restore on btrfs</title><link>/posts/podman-checkpoint-restore-btrfs/</link><pubDate>Sat, 20 Feb 2021 04:55:04 +0700</pubDate><author>adathor@adathor.com (Attila Pinter - Adathor)</author><guid>/posts/podman-checkpoint-restore-btrfs/</guid><description>&lt;h2 id="podman-checkpointrestore-in-userspace">Podman Checkpoint/Restore in Userspace&lt;/h2>
&lt;p>Recently I was migrating our entire Podman infra to a new, bigger server, roughly ~180 container. Most of our things are running in &lt;code>pods&lt;/code> which are fairly easy to migrate, just &lt;code>podman generate kube --filename xyz.yml xyz-pod&lt;/code>, clean up the yml a bit and on the new server I just &lt;em>play&lt;/em> it with &lt;code>podman play xyz.yml&lt;/code>. Done, pod migrated.
On the other hand we have a few containers that are running outside of pods and was interested how lazy I can get with those using Podman. Fairly quickly ran into &lt;code>Podman Checkpoints/Restore in Userspace (CRIU)&lt;/code>.
With CRIU Podman is able to checkpoint and restore containers in their &lt;strong>current state&lt;/strong>. Migration is just one use-case, another would be to restore a container after a host reboot exactly the way it was prior the restart. This is exactly what I needed, scripts back in the box, in the new and shiny stuff comes.&lt;/p></description></item></channel></rss>