<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automation on YAL/TB</title><link>https://blog.adathor.com/tags/automation/</link><description>Recent content in Automation on YAL/TB</description><generator>Hugo</generator><language>en</language><managingEditor>adathor@adathor.com (Attila Pinter - Adathor)</managingEditor><webMaster>adathor@adathor.com (Attila Pinter - Adathor)</webMaster><lastBuildDate>Wed, 10 Feb 2021 09:38:16 +0700</lastBuildDate><atom:link href="https://blog.adathor.com/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Podman quick start</title><link>https://blog.adathor.com/posts/podman/</link><pubDate>Wed, 10 Feb 2021 09:38:16 +0700</pubDate><author>adathor@adathor.com (Attila Pinter - Adathor)</author><guid>https://blog.adathor.com/posts/podman/</guid><description>&lt;h2 id="what-is-podman">What is Podman&lt;/h2>
&lt;p>Podman is a a daemonless, open-source tool to manage, deploy and build application containers. Podman is using Open Containers Initiative (OCI) Containers and container images, which means that containers crated with/for Docker or CRI-o will work with Podman as well and vice versa. It is coming with a command line interface (CLI) which offers pretty much the same commands like Docker does. How similar are Podman commands to Docker&amp;rsquo;s? Let&amp;rsquo;s put it this way: many Podman users just alias &lt;code>docker&lt;/code> to &lt;code>podman&lt;/code>. Like other runtimes, Podman also relies on an OCI compliant container runtime to interface with the operating system. Podamn also has a RESTful API to manage containers, offers automatic updates of containers and has a fantastic &lt;code>systemd&lt;/code> integration.&lt;/p></description></item></channel></rss>